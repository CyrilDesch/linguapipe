name: Build and Deploy

on:
  push:
    branches:
      - main
      - development

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  quality-check:
    name: Quality Check
    uses: ./.github/workflows/quality.yml

  docker-build-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: quality-check
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup sbt
        uses: sbt/setup-sbt@v1
        with:
          sbt-runner-version: "1.11.7"

      - name: Cache sbt dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            project/target
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}-${{ hashFiles('**/project/Dependencies.scala') }}

      - name: Build Docker image with sbt
        run: sbt infrastructure/docker:publishLocal

      - name: Tag and push Docker image
        run: |
          docker tag tp_api:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ github.sha }}
          if [ "${{ github.ref_name }}" = "main" ]; then
            docker tag tp_api:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          fi
