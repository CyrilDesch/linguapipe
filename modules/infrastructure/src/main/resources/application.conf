linguapipe {
  runtime {
    environment = "local"
  }

  grpc {
    host = "0.0.0.0"
    port = 9090
  }


  # Migration and initialization settings
  migrations {
    run-on-startup = true
    fail-on-error = true
  }

  # Declarative configuration for adapters
  
  adapters {
    
    driven {
      
      # Database
      # Options: postgres
      database {
        type = "postgres"
        
        postgres {
          host = ${DB_HOST:-localhost}
          port = 5432
          database = "linguapipe"
          user = "linguapipe"
          password = ${DB_PASSWORD:-linguapipe}
        }
      }
      
      # Vector Store
      # Options: qdrant
      vector-store {
        type = "qdrant"
        
        qdrant {
          url = ${QDRANT_URL:-http://localhost:6333}
          api-key = ${?QDRANT_API_KEY}
          collection = "linguapipe"
        }
      }
      
      # Transcription
      # Options: whisper
      transcriber {
        type = "whisper"
        
        whisper {
          model-path = "base"
          api-url = ${WHISPER_URL:-http://localhost:9001}
        }
      }
      
      
      # Embedder
      # Options: huggingface
      embedder {
        type = "huggingface"
        
        huggingface {
          model = "sentence-transformers/all-MiniLM-L6-v2"
          api-url = ${HUGGINGFACE_URL:-http://localhost:8080}  # Text Embeddings Inference service
        }
      }
      
      # Blob Store
      # Options: minio
      blob-store {
        type = "minio"
        
        minio {
          endpoint = ${MINIO_ENDPOINT:-http://localhost:9000}
          access-key = "minioadmin"
          secret-key = "minioadmin"
          bucket = "linguapipe-blobs"
        }
      }
    }
    
    # Adapters Driving (Primaires)
    driving {
      
      # API Gateway
      # Options: grpc
      api {
        type = "grpc" 
        
        grpc {
          host = "0.0.0.0"
          port = 9090
        }
      }
    }
  }
}
